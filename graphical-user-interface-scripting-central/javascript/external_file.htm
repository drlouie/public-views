<html>
<head>
	<title>Cross-browser Dynamic HTML Scripts - PageLoading</title>
<style type="text/css">
#divCont{position:absolute; overflow:hidden; z-index:201; left:200; top:250; clip:rect(0,200,250,0); height:250; width:200; }
#divLoad{position:absolute; left:200; top:250; z-index:201;  clip:rect(0,200,250,0); height:250; width:200; visibility:hidden;}
#divIEText{position:absolute; left:0; top:0}
#divArrows{position:absolute; left:420; top:250; z-index:10; visibility:hidden}
#divLinks{position:absolute; left:50; top:220}
</style>
<script type="text/javascript" language="JavaScript">
/********************************************************************************
Copyright (C) 1999 Thomas Brattli
This script is made by and copyrighted to Thomas Brattli at www.bratta.com
Visit for more great scripts. This may be used freely as long as this msg is intact!
I will also appriciate any links you could give me.
********************************************************************************/
//Default browsercheck, added to all scripts!
function checkBrowser(){
	this.ver=navigator.appVersion
	this.dom=document.getElementById?1:0
	this.ie5=(this.ver.indexOf("MSIE 5")>-1 && this.dom)?1:0;
	this.ie4=(document.all && !this.dom)?1:0;
	this.ns5=(this.dom && parseInt(this.ver) >= 5) ?1:0;
	this.ns4=(document.layers && !this.dom)?1:0;
	this.bw=(this.ie5 || this.ie4 || this.ns4 || this.ns5)
	return this
}
bw=new checkBrowser()
/************************************************************************************
Regular cross-browser objects.
************************************************************************************/
function makeObj(obj,nest){
    nest=(!nest) ? '':'document.'+nest+'.'
   	this.css=bw.dom? document.getElementById(obj).style:bw.ie4?document.all[obj].style:bw.ns4?eval(nest+"document.layers." +obj):0;					
	this.evnt=bw.dom? document.getElementById(obj):bw.ie4?document.all[obj]:bw.ns4?eval(nest+"document.layers." +obj):0;		
	this.height=bw.ns4?this.css.document.height||this.css.clip.bottom:this.evnt.offsetHeight||this.css.pixelHeight
	this.width=bw.ns4?this.css.document.width:this.evnt.offsetWidth
	this.moveIt=b_moveIt; this.x; this.y; this.moveBy=b_moveBy;
	return this
}
function b_moveIt(x,y){this.x=x;this.y=y; this.css.left=this.x; this.css.top=this.y}
function b_moveBy(x,y){this.moveIt(this.x+x,this.y+y)}
/************************************************************************************
Making iframe objects!
************************************************************************************/
function makeFrame(iframe,contdiv,textdiv,arrowdiv,usebuffer){
	this.loader=new makeObj(iframe,contdiv)
	if(arrowdiv) this.arrow=new makeObj(arrowdiv)
	this.usebuffer=(usebuffer || bw.ie4 || (bw.ie5 && !bw.ie55) || bw.ns4) && !bw.ns5
	if(this.usebuffer){
		this.cont=new makeObj(contdiv)
		if(!bw.ns4){
			this.ifr=document.frames[iframe]
		        this.text=new makeObj(textdiv)
		}else{
			this.text=this.loader
		}
		this.text.moveIt(0,0)
		if(arrowdiv) this.arrow.css.visibility='visible'
		this.checkloaded=ifr_checkloaded;
		this.up=ifr_up;
		this.down=ifr_down;
	}else if(bw.dom){
	
		this.loader.css.visibility='visible'
	}	
	this.scroll=1
	this.loadpage=ifr_loadpage;
    this.obj = iframe + "Object"; 	eval(this.obj + "=this")	
}
/************************************************************************************
Scroll functions for iframe
************************************************************************************/
function ifr_up(speed){
	go=false
	if(this.scroll){
		if(this.text.y<0){
			this.text.moveBy(0,speed)
			go=true
		}
	}
	if(go)setTimeout(this.obj+".up("+speed+")",20)
}
function ifr_down(speed){
	go=false
	if(this.scroll){
		h=bw.ns4?this.text.css.document.height:this.text.evnt.offsetHeight
		if(this.text.y>-h+this.cont.height){
			this.text.moveBy(0,-speed)
			go=true
		}
	}
	if(go)setTimeout(this.obj+".down("+speed+")",20)
}

/************************************************************************************
Object functions for Iframe object
************************************************************************************/
function ifr_loadpage(url){
	if(bw.ns4) this.loader.css.load(url,200)
	else this.loader.evnt.src=url
	if(this.usebuffer && !bw.ns4 && !bw.ns5){
		setTimeout(this.obj+".checkloaded()",200)
	}
	if(this.usebuffer){
		this.text.moveIt(0,0)
	}
}
/************************************************************************************
IE5 and IE4 uses the iframe as a buffer, so the content is moved to a layer after it
's loaded.
************************************************************************************/
function ifr_checkloaded(){
	if(bw.ns6) this.text.evnt.innerHTML=this.ifr.document.getElementsByTagName("body")(0).innerHTML
	if(this.ifr.document.readyState=="complete"){
		//Move Content to text div
		this.text.evnt.innerHTML=this.ifr.document.body.innerHTML
	}else setTimeout(this.obj+".checkloaded()",100)
}

/************************************************************************************
Initiating page
************************************************************************************/

function ifrinit(){
	//Making a frame. You can have as many frames you want on a page
	//Arguments:
	// makeFrame('LOADING_IFRAME/LAYER','THE_LAYER_AROUND_THE_OTHER_LAYERS','THE_TEXT_BUFFER_LAYER','THE_UP&DOWN_LAYER',useBuffer)
	frame=new makeFrame('divLoad','divCont','divIEText','divArrows',useBuffer)
}
onload=ifrinit;
 
 
useBuffer=0 //If you set this one to 1 Explorer5.5 will also use the buffer trick
	  
/*
NOTE:

This script uses a LAYER for Netscape 4 a IFRAME with a "buffer" for explorer 4 & 5 and
a regular IFRAME for Netscape 6 and Explorer 5.5

Explorer 5.5 and Netscape 6 both supports iframes rather good, which means that you 
set the z-index correctly on the iframes (in ie4 and ie5 iframes will always get the hightest z-index)

In Explorer 5.5 you can also get transparent IFRAMES. But to do that you have set style="background-color:transparent;"
inside the BODY tag of the page your loading inside the iframe. I have not yet figured out how to accomplish this
in NS6

The things mentioned above is the reason that I am using a "buffer" for ie4 and ie5. What is does it basically
that it moves the content of the iframe to a layer as soon as the content is loaded. When we have done
that we can control the layer like we want (like control the z-index).

Another thing to note here is the up and down arrows layer. The layer is only in use on explorer4 & 5 and Netscape 4.
For the other 2 browsers we use the built in scrollbar.


If you set useBuffer to 1 Explorer5.5 will also use the buffer and the divArrow
I was going to make this for Netscape 6 as well, but I kept getting a very strange error message every time
I tried to reach the document in a frame. I will update the scripts when I figure out how to do that in NS6


NOTE2: When I say NS6 I really mean Mozilla, the latest build. Netscape 6PR1 is horrible...

THE LAST NOTE: Damn... I started out and thought I was going to make the coolest script around, but as I went
on I found to many differences and errors in the different browsers that it really didn't turn out as I liked.
When using the buffer you cannot use scripts with styles or scripts in them (unless you place it inside the body
of the document, and even then you'll get problems..). Also remember to either use virtual urls to your images
or place all the files (this file and the files your loading) inside the same directory..
So the only browsers this script really works any good on is ie5.5 and ns6, in those 2 you can load pages like usuall.

Anyway, I give up (for now)
*/			  
			
</script>
</HEAD>
<BODY bgcolor="White">
<script>
//Writing out the iframe info we need.
if(bw.ie4 || (bw.ie5 && (!bw.ie55 || useBuffer))){ //FOR IE4 AND IE%
	document.write('<iframe id="divLoad"></iframe><div id="divCont"><div id="divIEText"></div></div>')
}else if(bw.ns4){ //FOR NETSCAPE 4
	document.write('<div id="divCont"><layer id="divLoad"></layer></div>')
}else if(bw.dom){ //FOR IE5.5 (if useBuffer is sets to 0) AND NETSCAPE 6 
	document.write('<iframe marginwidth="0" marginheight="0" allowTransparency="true" frameborder="0" id="divLoad" scrollbar="no"></iframe>')
}
</script>
<div id="divLinks">
<a href="#" onclick="frame.loadpage('page1.html'); return false">Load page 1</a>
<a href="#" onclick="frame.loadpage('page2.html'); return false">Load page 2</a>
<a href="#" onclick="frame.loadpage('page3.html'); return false">Load page 3</a>
</div>

<!-- THIS DIV IS USED BY ALL BROWSERS EXCEPT IE5.5 AND NS6 - IN THOSE BROWSERS I USE
THE REGULAR SCROLLBARS (except for ie5.5 if useBuffer is 1)-->
<div id="divArrows">
<a href="#" onmouseover="frame.scroll=true; frame.up(3)" onmouseout="frame.scroll=false">Up slow</a> -
<a href="#" onmouseover="frame.scroll=true; frame.up(8)" onmouseout="frame.scroll=false">Up medium</a> -
<a href="#" onmouseover="frame.scroll=true; frame.up(15)" onmouseout="frame.scroll=false">Up fast</a>
<br><br><br><br>
<a href="#" onmouseover="frame.scroll=true; frame.down(3)" onmouseout="frame.scroll=false">Down slow</a> -
<a href="#" onmouseover="frame.scroll=true; frame.down(8)" onmouseout="frame.scroll=false">Down medium</a> -
<a href="#" onmouseover="frame.scroll=true; frame.down(15)" onmouseout="frame.scroll=false">Down fast</a>
</div>

YOUR REGULAR BODY CONTENT GOES IN HERE
</BODY>
</HTML>

